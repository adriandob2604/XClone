services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      - frontend_network
      - project_network
    volumes:
      - ./frontend:/app
    depends_on:
      - keycloak
    restart: unless-stopped

  explore-service:
    image: backend-microservices
    command: ["./explore-services"]
    container_name: explore-service
    env_file:
      - ./backend/.env
    ports:
      - "5001:5000"
    networks:
      - backend_network
  interaction-service:
    image: backend-microservices
    command: ["./interaction-services"]
    container_name: interaction-service
    env_file:
      - ./backend/.env
    ports:
      - "5002:5000"
    networks:
      - backend_network
  notifications-service:
    image: backend-microservices
    command: ["./notifications-services"]
    container_name: notifications-service
    env_file:
      - ./backend/.env
    ports:
      - "5003:5000"
    networks:
      - backend_network
  post-service:
    image: backend-microservices
    command: ["./post-services"]
    container_name: post-service
    env_file:
      - ./backend/.env
    ports:
      - "5004:5000"
    networks:
      - backend_network
  search-history-service:
    image: backend-microservices
    command: ["./search-history-services"]
    container_name: search-history-service
    env_file:
      - ./backend/.env
    ports:
      - "5005:5000"
    networks:
      - backend_network
  tags-service:
    image: backend-microservices
    command: ["./tags-services"]
    container_name: tags-service
    env_file:
      - ./backend/.env
    ports:
      - "5006:5000"
    networks:
      - backend_network
  users-service:
    image: backend-microservices
    command: ["./users-services"]
    container_name: users-service
    env_file:
      - ./backend/.env
    ports:
      - "5007:5000"
    depends_on:
      cache:
        condition: service_started
      keycloak:
        condition: service_healthy
    networks:
      - backend_network
      - project_network
  cache:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: cache
    volumes:
      - nginx_cache:/var/cache/nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend_network
      - project_network
  postgres:
    image: postgres:16
    container_name: postgres
    env_file:
      - ./postgres/.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - project_network
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    env_file:
      - ./keycloak/.env
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 5s
      timeout: 10s
      retries: 15
    networks:
      - frontend_network
      - project_network
      - backend_network
    command:
      - start-dev
volumes:
  nginx_cache:
  pg_data:
networks:
  project_network:
    name: project_network
  frontend_network:
    name: frontend_network
  backend_network:
    name: backend_network
